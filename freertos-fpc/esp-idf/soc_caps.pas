unit soc_caps;

interface

{$include sdkconfig.inc}

uses
  esp_bit_defs;

const
  SOC_CAPS_ECO_VER = CONFIG_ESP32_REV_MIN;
  SOC_CAPS_ECO_VER_MAX = 3;
  SOC_ADC_SUPPORTED = 1;
  SOC_DAC_SUPPORTED = 1;
  SOC_MCPWM_SUPPORTED = 1;
  SOC_SDMMC_HOST_SUPPORTED = 1;
  SOC_BT_SUPPORTED = 1;
  SOC_CLASSIC_BT_SUPPORTED = 1;
  SOC_PCNT_SUPPORTED = 1;
  SOC_SDIO_SLAVE_SUPPORTED = 1;
  SOC_TWAI_SUPPORTED = 1;
  SOC_EMAC_SUPPORTED = 1;
  SOC_CPU_CORES_NUM = 2;
  SOC_ULP_SUPPORTED = 1;
  SOC_RTC_SLOW_MEM_SUPPORTED = 1;
  SOC_CCOMP_TIMER_SUPPORTED = 1;
  SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS = 1;
  SOC_ADC_RTC_CTRL_SUPPORTED = 1;
  SOC_ADC_DIG_CTRL_SUPPORTED = 1;
  SOC_ADC_PERIPH_NUM = 2;
  SOC_ADC_MAX_CHANNEL_NUM = 10;
  SOC_ADC_DIGI_CONTROLLER_NUM = 2;
  SOC_ADC_PATT_LEN_MAX = 16;
  SOC_ADC_DIGI_MIN_BITWIDTH = 9;
  SOC_ADC_DIGI_MAX_BITWIDTH = 12;
  SOC_ADC_SAMPLE_FREQ_THRES_HIGH = (2 * 1000) * 1000;
  SOC_ADC_SAMPLE_FREQ_THRES_LOW = 2000;
  SOC_ADC_MAX_BITWIDTH = 12;
{$if SOC_CAPS_ECO_VER >= 1}
  SOC_BROWNOUT_RESET_SUPPORTED = 1;
{$endif}
  SOC_CPU_BREAKPOINTS_NUM = 2;
  SOC_CPU_WATCHPOINTS_NUM = 2;
  SOC_CPU_WATCHPOINT_SIZE = 64;
  SOC_CPU_HAS_FPU = 1;
  SOC_DAC_PERIPH_NUM = 2;
  SOC_DAC_RESOLUTION = 8;
  SOC_GPIO_PORT = 1;
  SOC_GPIO_PIN_COUNT = 40;
  //SOC_GPIO_VALID_GPIO_MASK =
  //  $FFFFFFFFFF and (not (((((0 or BIT24) or BIT28) or BIT29) or BIT30) or BIT31));
  //SOC_GPIO_VALID_OUTPUT_GPIO_MASK =
  //  SOC_GPIO_VALID_GPIO_MASK and (not
  //  ((((((0 or BIT34) or BIT35) or BIT36) or BIT37) or BIT38) or BIT39));
  SOC_GPIO_SUPPORT_SLP_SWITCH = 1;
  SOC_I2C_NUM = 2;
  SOC_I2C_FIFO_LEN = 32;
  SOC_I2C_SUPPORT_APB = 1;
  SOC_CLK_APLL_SUPPORTED = 1;
  SOC_APLL_MULTIPLIER_OUT_MIN_HZ = 350000000;
  SOC_APLL_MULTIPLIER_OUT_MAX_HZ = 500000000;
  SOC_APLL_MIN_HZ = 5303031;
  SOC_APLL_MAX_HZ = 125000000;
  SOC_I2S_NUM = 2;
  SOC_I2S_SUPPORTS_APLL = 1;
  SOC_I2S_SUPPORTS_PDM_TX = 1;
  SOC_I2S_SUPPORTS_PDM_RX = 1;
  SOC_I2S_SUPPORTS_ADC = 1;
  SOC_I2S_SUPPORTS_DAC = 1;
  SOC_I2S_TRANS_SIZE_ALIGN_WORD = 1;
  SOC_I2S_LCD_I80_VARIANT = 1;
  SOC_LCD_I80_SUPPORTED = 1;
  SOC_LCD_I80_BUSES = 1;
  SOC_LCD_I80_BUS_WIDTH = 24;
  SOC_LEDC_SUPPORT_HS_MODE = 1;
  SOC_LEDC_CHANNEL_NUM = 8;
  SOC_LEDC_TIMER_BIT_WIDE_NUM = 20;
  SOC_MCPWM_GROUPS = 2;
  SOC_MCPWM_TIMERS_PER_GROUP = 3;
  SOC_MCPWM_OPERATORS_PER_GROUP = 3;
  SOC_MCPWM_COMPARATORS_PER_OPERATOR = 2;
  SOC_MCPWM_GENERATORS_PER_OPERATOR = 2;
  SOC_MCPWM_TRIGGERS_PER_OPERATOR = 2;
  SOC_MCPWM_GPIO_FAULTS_PER_GROUP = 3;
  SOC_MCPWM_CAPTURE_TIMERS_PER_GROUP = 1;
  SOC_MCPWM_CAPTURE_CHANNELS_PER_TIMER = 3;
  SOC_MCPWM_GPIO_SYNCHROS_PER_GROUP = 3;
  SOC_MCPWM_BASE_CLK_HZ = 160000000;
  SOC_MPU_CONFIGURABLE_REGIONS_SUPPORTED = 0;
  SOC_MPU_MIN_REGION_SIZE = $20000000;
  SOC_MPU_REGIONS_MAX_NUM = 8;
  SOC_MPU_REGION_RO_SUPPORTED = 0;
  SOC_MPU_REGION_WO_SUPPORTED = 0;
  SOC_PCNT_GROUPS = 1;
  SOC_PCNT_UNITS_PER_GROUP = 8;
  SOC_PCNT_CHANNELS_PER_UNIT = 2;
  SOC_PCNT_THRES_POINT_PER_UNIT = 2;
  SOC_RMT_GROUPS = 1;
  SOC_RMT_TX_CANDIDATES_PER_GROUP = 8;
  SOC_RMT_RX_CANDIDATES_PER_GROUP = 8;
  SOC_RMT_CHANNELS_PER_GROUP = 8;
  SOC_RMT_MEM_WORDS_PER_CHANNEL = 64;
  SOC_RMT_SUPPORT_REF_TICK = 1;
  SOC_RMT_CHANNEL_CLK_INDEPENDENT = 1;
  SOC_RTCIO_PIN_COUNT = 18;
  SOC_RTCIO_INPUT_OUTPUT_SUPPORTED = 1;
  SOC_RTCIO_HOLD_SUPPORTED = 1;
  SOC_RTCIO_WAKE_SUPPORTED = 1;
  SOC_SIGMADELTA_NUM = 1;
  SOC_SIGMADELTA_CHANNEL_NUM = 8;
  SOC_SPI_PERIPH_NUM = 3;
  SOC_SPI_DMA_CHAN_NUM = 2;
  SOC_SPI_MAXIMUM_BUFFER_SIZE = 64;
  SOC_SPI_MAX_PRE_DIVIDER = 8192;
  SOC_SPI_SUPPORT_AS_CS = 1;
  SOC_TIMER_GROUP_TIMERS_PER_GROUP = 2;
  SOC_TIMER_GROUP_COUNTER_BIT_WIDTH = 64;
  SOC_TOUCH_VERSION_1 = 1;
  SOC_TOUCH_SENSOR_NUM = 10;
  SOC_TOUCH_PAD_MEASURE_WAIT_MAX = $FF;
  SOC_TOUCH_PAD_THRESHOLD_MAX = 0;
  SOC_TWAI_BRP_MIN = 2;
{$if SOC_CAPS_ECO_VER >= 2}
  SOC_TWAI_BRP_MAX = 256;
  SOC_TWAI_BRP_DIV_SUPPORTED = 1;
  SOC_TWAI_BRP_DIV_THRESH = 128;
{$else}
  SOC_TWAI_BRP_MAX = 128;
{$endif}
  SOC_TWAI_SUPPORT_MULTI_ADDRESS_LAYOUT = 1;
  SOC_UART_NUM = 3;
  SOC_UART_SUPPORT_REF_TICK = 1;
  SOC_UART_FIFO_LEN = 128;
  SOC_UART_BITRATE_MAX = 5000000;
  SOC_SPIRAM_SUPPORTED = 1;
  SOC_SHA_SUPPORT_PARALLEL_ENG = 1;
  SOC_SHA_SUPPORT_SHA1 = 1;
  SOC_SHA_SUPPORT_SHA256 = 1;
  SOC_SHA_SUPPORT_SHA384 = 1;
  SOC_SHA_SUPPORT_SHA512 = 1;
  SOC_RSA_MAX_BIT_LEN = 4096;
  SOC_AES_SUPPORT_AES_128 = 1;
  SOC_AES_SUPPORT_AES_192 = 1;
  SOC_AES_SUPPORT_AES_256 = 1;
  SOC_FLASH_ENCRYPTED_XTS_AES_BLOCK_MAX = 32;
  SOC_PHY_DIG_REGS_MEM_SIZE = 21 * 4;
  SOC_PM_SUPPORT_EXT_WAKEUP = 1;
  SOC_PM_SUPPORT_TOUCH_SENSOR_WAKEUP = 1;
  SOC_CAN_SUPPORTED = SOC_TWAI_SUPPORTED;
  CAN_BRP_MIN = SOC_TWAI_BRP_MIN;
  CAN_BRP_MAX = SOC_TWAI_BRP_MAX;
  CAN_SUPPORT_MULTI_ADDRESS_LAYOUT = SOC_TWAI_SUPPORT_MULTI_ADDRESS_LAYOUT;
{$if SOC_CAPS_ECO_VER >= 2}
  CAN_BRP_DIV_SUPPORTED = SOC_TWAI_BRP_DIV_SUPPORTED;
  CAN_BRP_DIV_THRESH = SOC_TWAI_BRP_DIV_THRESH;
{$endif}
  SOC_SDMMC_USE_IOMUX = 1;
  SOC_SDMMC_NUM_SLOTS = 2;
  SOC_BLE_DONT_UPDATE_OWN_RPA = 1;

function SOC_ADC_SUPPORT_DMA_MODE(PERIPH_NUM: longint): boolean; inline;
function SOC_ADC_CHANNEL_NUM(PERIPH_NUM: longint): longint; inline;
//function SOC_SPI_PERIPH_CS_NUM(i: longint): longint;

implementation

function SOC_ADC_SUPPORT_DMA_MODE(PERIPH_NUM: longint): boolean;
begin
  Result := PERIPH_NUM = 0;
end;

function SOC_ADC_CHANNEL_NUM(PERIPH_NUM: longint): longint;
begin
  if PERIPH_NUM = 0 then
    Result := 8
  else
    Result := 10;
end;

//function SOC_SPI_PERIPH_CS_NUM(i: longint): longint;
//begin
//  SOC_SPI_PERIPH_CS_NUM := 3;
//end;

end.
